# KPC Deactivation
import os
import time
import sys
import clr

clr.AddReference("C:\\Program Files\\Thorlabs\\Kinesis\\Thorlabs.MotionControl.DeviceManagerCLI.dll")
clr.AddReference("C:\\Program Files\\Thorlabs\\Kinesis\\Thorlabs.MotionControl.GenericMotorCLI.dll")
clr.AddReference("C:\\Program Files\\Thorlabs\\Kinesis\\Thorlabs.MotionControl.GenericPiezoCLI.dll")
clr.AddReference("C:\\Program Files\\Thorlabs\\Kinesis\\ThorLabs.MotionControl.KCube.PiezoStrainGaugeCLI.dll")
from Thorlabs.MotionControl.DeviceManagerCLI import *
from Thorlabs.MotionControl.GenericMotorCLI import *
from Thorlabs.MotionControl.GenericPiezoCLI import *
from Thorlabs.MotionControl.KCube.PiezoStrainGaugeCLI import *
from System import Decimal  # necessary for real world units

def deactivate(serial_no):
    try:
        DeviceManagerCLI.BuildDeviceList()

        # Create New Device
        serial_no=str(serial_no)

        # Connect
        kcube = KCubePiezoStrainGauge.CreateKCubePiezoStrainGauge(serial_no)

        kcube.Connect(serial_no)

        # Get Device Information and display description
        device_info = kcube.GetDeviceInfo()
        print(device_info.Description)

        # Start polling and enable
        kcube.StartPolling(250)  #250ms polling rate
        time.sleep(5)
        kcube.EnableDevice()
        time.sleep(0.25)  # Wait for device to enable

        if not kcube.IsSettingsInitialized():
            kcube.WaitForSettingsInitialized(10000)  # 10 second timeout
            assert kcube.IsSettingsInitialized() is True

        # Load the device configuration
        device_config = kcube.GetPiezoConfiguration(serial_no)

        # This shows how to obtain the device settings
        device_settings = kcube.PiezoDeviceSettings

        current_voltage = kcube.GetOutputVoltage()
        print(current_voltage)

        target_voltage = Decimal(0)
        step_size = Decimal(1)

        while current_voltage > target_voltage:
            current_voltage -= step_size
            kcube.SetOutputVoltage(current_voltage)
            time.sleep(0.5)
            actual_voltage = kcube.GetOutputVoltage()
            print(f"Voltage decreased to: {actual_voltage} V")

        kcube.StopPolling()
        kcube.Disconnect()

    except Exception as e:
        print(e)

deactivate(113250437)
